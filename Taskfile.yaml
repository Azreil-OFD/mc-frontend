version: '3'

dotenv: ['.env']

vars:
  IMAGE_BASE: nuxt3-app
  VERSION:
    sh: "jq -r .version package.json"
  IMAGE_TAG: "{{.IMAGE_BASE}}:v{{.VERSION}}"
  DEV_CONTAINER_NAME: nuxt3-dev
  PROD_CONTAINER_NAME: nuxt3-prod
  PORT: '{{ default "3000" .PORT }}'

tasks:
  default:
    desc: –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ package.json –∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    silent: true
    cmds:
      - "echo üì¶ –í–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞: v{{.VERSION}}"
      - echo ""
      - echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
      - echo "  task dev     üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (hot-reload)"
      - echo "  task prod    üöÄ –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"
      - echo "  task build   üõ† –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω-–æ–±—Ä–∞–∑–∞"
      - echo "  task         üì¶ –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"

  show:
    desc: –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    silent: true
    cmds:
      - "echo üì¶ VERSION: {{.VERSION}}"
      - "echo üê≥ IMAGE_TAG: {{.IMAGE_TAG}}"
      - "echo üö™ PORT: {{.PORT}}"
      - "echo üìÅ DEV_CONTAINER_NAME: {{.DEV_CONTAINER_NAME}}"
      - "echo üìÅ PROD_CONTAINER_NAME: {{.PROD_CONTAINER_NAME}}"

  build-image:
    desc: –£–º–Ω–∞—è —Å–±–æ—Ä–∫–∞":" buildx –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ BuildKit
    silent: true
    cmds:
      - |
        if docker buildx version >/dev/null 2>&1; then
          echo "üõ† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è buildx"
          docker buildx build --load -t {{.IMAGE_TAG}} --target {{.TARGET}} .
        else
          echo "üõ† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–π build —Å BuildKit"
          DOCKER_BUILDKIT=1 docker build -t {{.IMAGE_TAG}} --target {{.TARGET}} .
        fi

  dev:
    desc: –ó–∞–ø—É—Å–∫ Nuxt 3 –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (hot reload)
    vars:
      TARGET: development
    cmds:
      - echo "üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π dev-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–µ—Å–ª–∏ –±—ã–ª)..."
      - docker rm -f {{.DEV_CONTAINER_NAME}} || true
      - task: build-image
        vars:
          TARGET: "{{.TARGET}}"
      - echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
      - docker run -d --name {{.DEV_CONTAINER_NAME}} -p {{.PORT}}:3000 -v .:/app -v /app/node_modules -v /app/.nuxt -v /app/.data {{.IMAGE_TAG}}
      - lazydocker
      - docker stop {{.DEV_CONTAINER_NAME}}

  prod:
    desc: –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Nuxt 3 –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    vars:
      TARGET: production
    cmds:
      - echo "üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π prod-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–µ—Å–ª–∏ –±—ã–ª)..."
      - docker rm -f {{.PROD_CONTAINER_NAME}} || true
      - task: build-image
        vars:
          TARGET: "{{.TARGET}}"
      - echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
      - docker run -d --name {{.PROD_CONTAINER_NAME}} -p {{.PORT}}:3000 {{.IMAGE_TAG}}
      - lazydocker
      - docker stop {{.DEV_CONTAINER_NAME}}

  build:
    desc: –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞ Nuxt 3 –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    vars:
      TARGET: production
    cmds:
      - task: build-image

  test:
    desc: –ó–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    vars:
      TARGET: development
    cmds:
      - echo "üß™ –°–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤..."
      - task: build-image
      - echo "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
      - docker run --rm -v .:/app -v /app/node_modules {{.IMAGE_TAG}} sh -c "npm install && npm run test"
